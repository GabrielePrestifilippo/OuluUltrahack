!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.geojsonPathFinder=e()}}(function(){return function e(t,r,o){function n(a,s){if(!r[a]){if(!t[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(i)return i(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var p=r[a]={exports:{}};t[a][0].call(p.exports,function(e){var r=t[a][1][e];return n(r?r:e)},p,p.exports,e,t,r,o)}return r[a].exports}for(var i="function"==typeof require&&require,a=0;a<o.length;a++)n(o[a]);return n}({1:[function(e,t,r){function o(e,t,r,o,n,i){for(var a=0,s=0,c=[],u=[];!o[e];){var p=r[e];if(!p)break;var f=Object.keys(p).filter(function(e){return e!==t})[0];if(a+=p[f],i){if(s+=r[f][e],u.indexOf(e)>=0){o[e]=r[e];break}u.push(e)}c.push(n[e]),t=e,e=f}return{vertex:e,weight:a,reverseWeight:s,coordinates:c}}function n(e,t,r,n,i){var a=t[e];return Object.keys(a).reduce(function(s,c){var u=o(c,e,t,r,n,i),p=a[c]+u.weight,f=a[c]+u.reverseWeight;if(u.vertex!==e&&((!s.edges[u.vertex]||s.edges[u.vertex]>p)&&(s.edges[u.vertex]=p,s.coordinates[u.vertex]=[n[e]].concat(u.coordinates)),i&&!isNaN(f)&&(!s.incomingEdges[u.vertex]||s.incomingEdges[u.vertex]>f))){s.incomingEdges[u.vertex]=f;var h=[n[e]].concat(u.coordinates);h.reverse(),s.incomingCoordinates[u.vertex]=h}return s},{edges:{},incomingEdges:{},coordinates:{},incomingCoordinates:{}})}function i(e,t,r){var o=Object.keys(e).reduce(function(t,o,n,i){var a=e[o],s=Object.keys(a),c=s.length;if(1===c){var u=e[s[0]];remove=!u[o]}else 2===c?remove=s.filter(function(t){return e[t][o]}).length===c:remove=!1;return remove||(t[o]=a),n%1e3===0&&r&&r("compact:ends",n,i.length),t},{});return Object.keys(o).reduce(function(i,a,s,c){var u=n(a,e,o,t,!1);return i.graph[a]=u.edges,i.coordinates[a]=u.coordinates,s%1e3===0&&r&&r("compact:nodes",s,c.length),i},{graph:{},coordinates:{}})}t.exports={compactNode:n,compactGraph:i}},{}],2:[function(e,t,r){var o=e("tinyqueue");t.exports=function(e,t,r){var n={};n[t]=0;for(var i=[0,[t],t],a=new o([i],function(e,t){return e[0]-t[0]});a.length;){var s=a.pop(),c=s[0],u=s[2];if(u===r)return s.slice(0,2);var p=e[u];Object.keys(p).forEach(function(e){var t=c+p[e];if(!(e in n)||t<n[e]){n[e]=t;var r=[t,s[1].concat([e]),e];a.push(r)}})}return null}},{tinyqueue:4}],3:[function(e,t,r){function o(e,t){if(t=t||{},e.compactedVertices||(e=i(e,t)),this._graph=e,this._keyFn=t.keyFn||function(e){return e.join(",")},this._precision=t.precision||1e-5,0===Object.keys(this._graph.compactedVertices).length)throw new Error("Compacted graph contains no forks (topology has no intersections).")}var n=e("./dijkstra"),i=e("./preprocessor"),a=e("./compactor"),s=e("./round-coord");t.exports=o,o.prototype={findPath:function(e,t){var r=this._keyFn(s(e.geometry.coordinates,this._precision)),o=this._keyFn(s(t.geometry.coordinates,this._precision)),i=(this._createPhantom(r),this._createPhantom(o),n(this._graph.compactedVertices,r,o));if(i){var a=i[0];return i=i[1],{path:i.reduce(function(e,t,r,o){return r>0&&(e=e.concat(this._graph.compactedCoordinates[o[r-1]][t])),e}.bind(this),[]).concat([this._graph.sourceVertices[o]]),weight:a}}return null},serialize:function(){return this._graph},_createPhantom:function(e){if(this._graph.compactedVertices[e])return null;var t=a.compactNode(e,this._graph.vertices,this._graph.compactedVertices,this._graph.sourceVertices,!0);return this._graph.compactedVertices[e]=t.edges,this._graph.compactedCoordinates[e]=t.coordinates,Object.keys(t.incomingEdges).forEach(function(r){this._graph.compactedVertices[r][e]=t.incomingEdges[r],this._graph.compactedCoordinates[r][e]=t.incomingCoordinates[r]}.bind(this)),e},_removePhantom:function(e){e&&(Object.keys(this._graph.compactedVertices[e]).forEach(function(t){delete this._graph.compactedVertices[t][e]}.bind(this)),Object.keys(this._graph.compactedCoordinates[e]).forEach(function(t){delete this._graph.compactedCoordinates[t][e]}.bind(this)),delete this._graph.compactedVertices[e],delete this._graph.compactedCoordinates[e])}}},{"./compactor":1,"./dijkstra":2,"./preprocessor":12,"./round-coord":13}],4:[function(e,t,r){"use strict";function o(e,t){if(!(this instanceof o))return new o(e,t);if(this.data=e||[],this.length=this.data.length,this.compare=t||n,this.length>0)for(var r=this.length>>1;r>=0;r--)this._down(r)}function n(e,t){return e<t?-1:e>t?1:0}t.exports=o,o.prototype={push:function(e){this.data.push(e),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var e=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),e}},peek:function(){return this.data[0]},_up:function(e){for(var t=this.data,r=this.compare,o=t[e];e>0;){var n=e-1>>1,i=t[n];if(r(o,i)>=0)break;t[e]=i,e=n}t[e]=o},_down:function(e){for(var t=this.data,r=this.compare,o=this.length,n=o>>1,i=t[e];e<n;){var a=(e<<1)+1,s=a+1,c=t[a];if(s<o&&r(t[s],c)<0&&(a=s,c=t[s]),r(c,i)>=0)break;t[e]=c,e=a}t[e]=i}}},{}],5:[function(e,t,r){var o=e("turf-invariant").getCoord,n=e("turf-helpers").radiansToDistance;t.exports=function(e,t,r){var i=Math.PI/180,a=o(e),s=o(t),c=i*(s[1]-a[1]),u=i*(s[0]-a[0]),p=i*a[1],f=i*s[1],h=Math.pow(Math.sin(c/2),2)+Math.pow(Math.sin(u/2),2)*Math.cos(p)*Math.cos(f);return n(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)),r)}},{"turf-helpers":6,"turf-invariant":7}],6:[function(e,t,r){function o(e,t){return{type:"Feature",properties:t||{},geometry:e}}t.exports.feature=o,t.exports.point=function(e,t){if(!Array.isArray(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return o({type:"Point",coordinates:e.slice()},t)},t.exports.polygon=function(e,t){if(!e)throw new Error("No coordinates passed");for(var r=0;r<e.length;r++){var n=e[r];if(n.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var i=0;i<n[n.length-1].length;i++)if(n[n.length-1][i]!==n[0][i])throw new Error("First and last Position are not equivalent.")}return o({type:"Polygon",coordinates:e},t)},t.exports.lineString=function(e,t){if(!e)throw new Error("No coordinates passed");return o({type:"LineString",coordinates:e},t)},t.exports.featureCollection=function(e){return{type:"FeatureCollection",features:e}},t.exports.multiLineString=function(e,t){if(!e)throw new Error("No coordinates passed");return o({type:"MultiLineString",coordinates:e},t)},t.exports.multiPoint=function(e,t){if(!e)throw new Error("No coordinates passed");return o({type:"MultiPoint",coordinates:e},t)},t.exports.multiPolygon=function(e,t){if(!e)throw new Error("No coordinates passed");return o({type:"MultiPolygon",coordinates:e},t)},t.exports.geometryCollection=function(e,t){return o({type:"GeometryCollection",geometries:e},t)};var n={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373};t.exports.radiansToDistance=function(e,t){var r=n[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e*r},t.exports.distanceToRadians=function(e,t){var r=n[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r},t.exports.distanceToDegrees=function(e,t){var r=n[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r*57.2958}},{}],7:[function(e,t,r){function o(e){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])return e;if(e){if("Feature"===e.type&&e.geometry&&"Point"===e.geometry.type&&Array.isArray(e.geometry.coordinates))return e.geometry.coordinates;if("Point"===e.type&&Array.isArray(e.coordinates))return e.coordinates}throw new Error("A coordinate, feature, or point geometry is required")}function n(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}function i(e,t,r){if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function a(e,t,r){if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}t.exports.geojsonType=n,t.exports.collectionOf=a,t.exports.featureOf=i,t.exports.getCoord=o},{}],8:[function(e,t,r){var o=e("turf-helpers").featureCollection,n=e("turf-meta").coordEach,i=e("turf-helpers").point;t.exports=function(e){var t=[];return n(e,function(e){t.push(i(e))}),o(t)}},{"turf-helpers":9,"turf-meta":10}],9:[function(e,t,r){arguments[4][6][0].apply(r,arguments)},{dup:6}],10:[function(e,t,r){function o(e,t,r){var o,n,i,a,s,c,u,p,f,h,d=0,g="FeatureCollection"===e.type,l="Feature"===e.type,y=g?e.features.length:1;for(o=0;o<y;o++)for(f=g?e.features[o].geometry:l?e.geometry:e,h="GeometryCollection"===f.type,u=h?f.geometries.length:1,a=0;a<u;a++)if(c=h?f.geometries[a]:f,p=c.coordinates,d=!r||"Polygon"!==c.type&&"MultiPolygon"!==c.type?0:1,"Point"===c.type)t(p);else if("LineString"===c.type||"MultiPoint"===c.type)for(n=0;n<p.length;n++)t(p[n]);else if("Polygon"===c.type||"MultiLineString"===c.type)for(n=0;n<p.length;n++)for(i=0;i<p[n].length-d;i++)t(p[n][i]);else{if("MultiPolygon"!==c.type)throw new Error("Unknown Geometry Type");for(n=0;n<p.length;n++)for(i=0;i<p[n].length;i++)for(s=0;s<p[n][i].length-d;s++)t(p[n][i][s])}}function n(e,t,r,n){return o(e,function(e){r=t(r,e)},n),r}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties);break;case"Feature":t(e.properties)}}function a(e,t,r){return i(e,function(e){r=t(r,e)}),r}function s(e,t){if("Feature"===e.type)t(e);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r])}function c(e){var t=[];return o(e,function(e){t.push(e)}),t}t.exports.coordEach=o,t.exports.coordReduce=n,t.exports.propEach=i,t.exports.propReduce=a,t.exports.featureEach=s,t.exports.coordAll=c},{}],11:[function(e,t,r){var o=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};t.exports=function(e,t){if(!o(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return{type:"Feature",geometry:{type:"Point",coordinates:e},properties:t||{}}}},{}],12:[function(e,t,r){var o=e("./topology"),n=e("./compactor"),i=e("turf-distance"),a=(e("./round-coord"),e("turf-point"));t.exports=function(e,t){t=t||{};var r=t.weightFn||function(e,t){return i(a(e),a(t))};"FeatureCollection"===e.type?topo=o(e,t):e.edges&&(topo=e);var s=topo.edges.reduce(function(e,o,n,i){var a=o[0],s=o[1],c=o[2],u=r(topo.vertices[a],topo.vertices[s],c),p=function(t){e[t]||(e[t]={})},f=function(t,r,o){var n=e[t];n[r]=o};return u&&(p(a),p(s),u instanceof Object?(u.forward&&f(a,s,u.forward),u.backward&&f(s,a,u.backward)):(f(a,s,u),f(s,a,u))),n%1e3===0&&t.progress&&t.progress("edgeweights",n,i.length),e},{}),c=n.compactGraph(s,topo.vertices,t.progress);return{vertices:s,sourceVertices:topo.vertices,compactedVertices:c.graph,compactedCoordinates:c.coordinates}}},{"./compactor":1,"./round-coord":13,"./topology":14,"turf-distance":5,"turf-point":11}],13:[function(e,t,r){t.exports=function(e,t){return[Math.round(e[0]/t)*t,Math.round(e[1]/t)*t]}},{}],14:[function(e,t,r){function o(e,t,r){return"FeatureCollection"===e.type?e.features.reduce(function(e,r){return o(r,t,e)},r):t(r,e)}function n(e,t){var r=[];return"FeatureCollection"===e.type&&(r=r.concat(e.features.filter(t))),{type:"FeatureCollection",features:r}}function i(e){return"LineString"===e.geometry.type}function a(e,t){t=t||{};var r=t.keyFn||function(e){return e.join(",")},a=t.precision||1e-5,u=n(e,i),p=s(u),f=p.features.reduce(function(e,o,n,i){var s=c(o.geometry.coordinates,a);return e[r(s)]=o.geometry.coordinates,n%1e3===0&&t.progress&&t.progress("topo:vertices",n,i.length),e},{}),h=o(u,function(e,o,n,i){return o.geometry.coordinates.forEach(function(t,n,i){if(n>0){var s=r(c(i[n-1],a)),u=r(c(t,a));e.push([s,u,o.properties])}}),n%1e3===0&&t.progress&&t.progress("topo:edges",n,i.length),e},[]);return{vertices:f,edges:h}}var s=e("turf-explode"),c=e("./round-coord");t.exports=a},{"./round-coord":13,"turf-explode":8}]},{},[3])(3)});